{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "results": [
        {
          "ruleId": "ConditionIsAlwaysTrueOrFalse",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Expression is always true"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "AssertionMessages/InvalidAssertionMessageHighlightingTests/AssertionMessageContractAnnotationSamples.cs",
                  "uriBaseId": "solutionDir",
                  "index": 0
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 31,
                  "endLine": 19,
                  "endColumn": 40,
                  "charOffset": 686,
                  "charLength": 9
                }
              }
            }
          ],
          "partialFingerprints": {
            "contextRegionHash/v1": "18F4828713B55119F2E4C461F5217B70A750E5D314CA322E9E4CCEF8F91EA37D"
          },
          "properties": {
            "tags": ["C#",".NETFramework 4.8"]
          }
        },
        {
          "ruleId": "ConditionIsAlwaysTrueOrFalse",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Expression is always true"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "AssertionMessages/InvalidAssertionMessageHighlightingTests/AssertionMessageContractAnnotationSamples.cs",
                  "uriBaseId": "solutionDir",
                  "index": 0
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 31,
                  "endLine": 59,
                  "endColumn": 41,
                  "charOffset": 2744,
                  "charLength": 10
                }
              }
            }
          ],
          "partialFingerprints": {
            "contextRegionHash/v1": "AD8AB4C9D2C1044A229E2370334389C4BC95AB48385653DD71332314CC028CFE"
          },
          "properties": {
            "tags": ["C#",".NETFramework 4.8"]
          }
        },
        {
          "ruleId": "ConditionIsAlwaysTrueOrFalse",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Expression is always true"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "AssertionMessages/InvalidAssertionMessageHighlightingTests/AssertionMessageContractAnnotationSamples.cs",
                  "uriBaseId": "solutionDir",
                  "index": 0
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 31,
                  "endLine": 61,
                  "endColumn": 41,
                  "charOffset": 2832,
                  "charLength": 10
                }
              }
            }
          ],
          "partialFingerprints": {
            "contextRegionHash/v1": "EE3CFB8FA0547E18D3C0D4B783068CD784C98204F40421BFB641069A4E6F70BD"
          },
          "properties": {
            "tags": ["C#",".NETFramework 4.8"]
          }
        },
        {
          "ruleId": "ConditionIsAlwaysTrueOrFalse",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Expression is always true"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "AssertionMessages/InvalidAssertionMessageHighlightingTests/AssertionMessageLegacyAnnotationSamples.cs",
                  "uriBaseId": "solutionDir",
                  "index": 1
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 31,
                  "endLine": 16,
                  "endColumn": 40,
                  "charOffset": 524,
                  "charLength": 9
                }
              }
            }
          ],
          "partialFingerprints": {
            "contextRegionHash/v1": "18F4828713B55119F2E4C461F5217B70A750E5D314CA322E9E4CCEF8F91EA37D"
          },
          "properties": {
            "tags": ["C#",".NETFramework 4.8"]
          }
        },
        {
          "ruleId": "ConditionIsAlwaysTrueOrFalse",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Expression is always true"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "AssertionMessages/InvalidAssertionMessageHighlightingTests/AssertionMessageLegacyAnnotationSamples.cs",
                  "uriBaseId": "solutionDir",
                  "index": 1
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 31,
                  "endLine": 37,
                  "endColumn": 41,
                  "charOffset": 1510,
                  "charLength": 10
                }
              }
            }
          ],
          "partialFingerprints": {
            "contextRegionHash/v1": "EE3CFB8FA0547E18D3C0D4B783068CD784C98204F40421BFB641069A4E6F70BD"
          },
          "properties": {
            "tags": ["C#",".NETFramework 4.8"]
          }
        },
        {
          "ruleId": "HeuristicUnreachableCode",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Code is heuristically unreachable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "AssertionMessages/InvalidAssertionMessageHighlightingTests/AssertionMessageContractAnnotationSamples.cs",
                  "uriBaseId": "solutionDir",
                  "index": 0
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 13,
                  "endLine": 68,
                  "endColumn": 84,
                  "charOffset": 3133,
                  "charLength": 71
                }
              }
            }
          ],
          "partialFingerprints": {
            "contextRegionHash/v1": "01FABE9971915B3F7B91F185E912E596E8C24C113CB436649885F08B8A64AE1B"
          },
          "properties": {
            "tags": ["C#",".NETFramework 4.8"]
          }
        }
      ],
      "tool": {
        "driver": {
          "name": "InspectCode",
          "organization": "JetBrains, Inc",
          "fullName": "JetBrains Inspect Code 2025.2",
          "semanticVersion": "252.0.20250812.71120",
          "informationUri": "http://www.jetbrains.com/resharper/features/command-line.html",
          "rules": [
            {
              "id": "ConditionIsAlwaysTrueOrFalse",
              "fullDescription": {
                "text": "Value of a boolean expression is always the same at this point"
              },
              "help": {
                "text": "https://www.jetbrains.com/help/resharper/ConditionIsAlwaysTrueOrFalse.html"
              },
              "shortDescription": {
                "text": "Expression is always 'true' or always 'false'"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://www.jetbrains.com/help/resharper/ConditionIsAlwaysTrueOrFalse.html",
              "relationships": [
                {
                  "target": {
                    "id": "CSHARP.CodeRedundancy",
                    "toolComponent": {
                      "name": "InspectCode"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                },
                {
                  "target": {
                    "id": "VBASIC.CodeRedundancy",
                    "toolComponent": {
                      "name": "InspectCode"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "HeuristicUnreachableCode",
              "fullDescription": {
                "text": "Heuristically unreachable code detected"
              },
              "help": {
                "text": "https://www.jetbrains.com/help/resharper/HeuristicUnreachableCode.html"
              },
              "shortDescription": {
                "text": "Heuristically unreachable code"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://www.jetbrains.com/help/resharper/HeuristicUnreachableCode.html",
              "relationships": [
                {
                  "target": {
                    "id": "CSHARP.CodeRedundancy",
                    "toolComponent": {
                      "name": "InspectCode"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            }
          ],
          "taxa": [
            {
              "id": "CSHARP",
              "name": "C#"
            },
            {
              "id": "CSHARP.CodeRedundancy",
              "name": "Redundancies in Code",
              "relationships": [
                {
                  "target": {
                    "id": "CSHARP",
                    "toolComponent": {
                      "name": "InspectCode"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "VBASIC",
              "name": "VB.NET"
            },
            {
              "id": "VBASIC.CodeRedundancy",
              "name": "Redundancies in Code",
              "relationships": [
                {
                  "target": {
                    "id": "VBASIC",
                    "toolComponent": {
                      "name": "InspectCode"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            }
          ]
        }
      },
      "invocations": [
        {
          "executionSuccessful": true
        }
      ],
      "versionControlProvenance": [
        {
          "repositoryUri": "https://github.com/ulrichb/Roflcopter",
          "revisionId": "3db35b713871626fe20f8b15cbd4d54097522ecc",
          "branch": "main"
        }
      ],
      "originalUriBaseIds": {
        "solutionDir": {
          "uri": "file:///C:/Users/Ulrich/U/Roflcopter/Src/Roflcopter.Plugin.Tests/test/data/",
          "description": {
            "text": "Solution Directory"
          }
        }
      },
      "artifacts": [
        {
          "location": {
            "uri": "AssertionMessages/InvalidAssertionMessageHighlightingTests/AssertionMessageContractAnnotationSamples.cs",
            "uriBaseId": "solutionDir"
          },
          "hashes": {
            "md5": "79B130863DDDE6F95F7967E0EB0174FA",
            "sha-1": "470BAB06917881CA5051EB1819287FFEAACB4B02",
            "sha-256": "6DBFFCD74E2ED40F8EBF9E3E5E921ACE5CE1FF7634F1D7210572FE67815FF075"
          }
        },
        {
          "location": {
            "uri": "AssertionMessages/InvalidAssertionMessageHighlightingTests/AssertionMessageLegacyAnnotationSamples.cs",
            "uriBaseId": "solutionDir"
          },
          "hashes": {
            "md5": "A052556C8790E4CEA44DBF1FD230EDFA",
            "sha-1": "2AD4EF65C7CF022AF4757636900EE74823D77FCB",
            "sha-256": "2F74BD65AB9B29C0F22B1D0D8EF980184CE3A5EDC2311805E0D0E3B8596BB9B9"
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}